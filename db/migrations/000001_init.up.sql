CREATE TABLE "authors" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  
  "name" text NOT NULL,
  "password_hash" text NOT NULL,
  "role" TEXT[] NOT NULL,
  "thumbnail_s3_path" VARCHAR(255) NOT NULL,
  
  "created_at" timestamp NOT NULL DEFAULT NOW()
);

CREATE TABLE "blogs" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "author_id" INTEGER NOT NULL,

  "description" VARCHAR(255) NOT NULL,
  "title" VARCHAR(255) NOT NULL,
  "content" TEXT NOT NULL, 
  "read_time" INTEGER NOT NULL, -- in minutes

  tsv_content tsvector, -- for indexing search

  "thumbnail_s3_path" VARCHAR(255) NOT NULL,
  "category" TEXT[] NOT NULL,

  "created_at" timestamp NOT NULL DEFAULT NOW()
);

CREATE INDEX idx_blogs_content_tsv ON blogs USING GIN(tsv_content);

CREATE OR REPLACE FUNCTION update_tsvector_column() RETURNS TRIGGER AS $$
BEGIN
  NEW.tsv_content := to_tsvector('english', NEW.content);
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER tsvectorupdate BEFORE INSERT OR UPDATE ON blogs
FOR EACH ROW EXECUTE FUNCTION update_tsvector_column();


CREATE TABLE "press" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "publisher_name" VARCHAR(255) NOT NULL,
  "publisher_profile_img_link" VARCHAR(255) NOT NULL,
  "thumbnail_s3_path" VARCHAR(255) NOT NULL,

  "description" VARCHAR(255) NOT NULL,
  "title" VARCHAR(255) NOT NULL,

  "external_url" VARCHAR(255) NOT NULL,
  "category" TEXT[] NOT NULL,
  "published_at" timestamp NOT NULL,

  "created_at" timestamp NOT NULL DEFAULT NOW()
);
